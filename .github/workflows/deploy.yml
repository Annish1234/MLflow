name: MLaaS CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  checkout:
    name: Checkout Repository
    runs-on: ubuntu-latest
    outputs:
      repo_path: ${{ steps.set-repo-path.outputs.repo_path }}
    steps:
      - name: Checkout Repo (Full Clone)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true

      - name: Set Repo Path Output
        id: set-repo-path
        run: echo "::set-output name=repo_path::$(pwd)"

  setup-python:
    name: Setup Python & Install Dependencies
    needs: checkout
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Dependencies
        run: pip install -r api/requirement.txt

  train-model:
    name: Train the Model
    needs: setup-python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Dependencies
        run: pip install -r api/requirement.txt

      - name: Train Model
        run: python model/train.py

  run-tests:
    name: Run Tests
    needs: train-model
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Dependencies
        run: pip install -r api/requirement.txt

      - name: Run Tests
        run: |
          if [ -f "tests/test.py" ]; then
            pytest -s tests/test.py
          else
            echo "No test file found. Skipping tests."
          fi

  deploy:
    name: Deploy to Hugging Face
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true

      - name: Configure Git for Hugging Face
        run: |
          git config --global user.email "annishjk01@gmail.com"
          git config --global user.name "annishjk01"

      - name: Deploy to Hugging Face Spaces
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          git remote add huggingface https://user:$HF_TOKEN@huggingface.co/spaces/annishjk01/Project_N2 || true
          git fetch huggingface main || true
          git push --force huggingface main
